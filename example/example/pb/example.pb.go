// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example/example.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
	_ "rights"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	//    string id = 1;
	//    string first_name = 2  [(zap.redact) = true];
	//    string last_name = 3  [(zap.redact) = true];
	//    int64 employee_number = 4 [(zap.redact) = true];
	//    string physical_desk = 6;
	//    ServiceMsg service =8;
	//
	Blocked              []string             `protobuf:"bytes,1,rep,name=blocked,proto3" json:"blocked,omitempty"`
	Extra                map[string]string    `protobuf:"bytes,2,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HireDate             *timestamp.Timestamp `protobuf:"bytes,3,opt,name=hire_date,json=hireDate,proto3" json:"hire_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c78cffa5d645ba4, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetBlocked() []string {
	if m != nil {
		return m.Blocked
	}
	return nil
}

func (m *User) GetExtra() map[string]string {
	if m != nil {
		return m.Extra
	}
	return nil
}

func (m *User) GetHireDate() *timestamp.Timestamp {
	if m != nil {
		return m.HireDate
	}
	return nil
}

//message ServiceMsg {
//    string id = 1;
//    string name = 2;
//}
type GetUserReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TentId               *Demo    `protobuf:"bytes,2,opt,name=tent_id,json=tentId,proto3" json:"tent_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserReq) Reset()         { *m = GetUserReq{} }
func (m *GetUserReq) String() string { return proto.CompactTextString(m) }
func (*GetUserReq) ProtoMessage()    {}
func (*GetUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c78cffa5d645ba4, []int{1}
}

func (m *GetUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserReq.Unmarshal(m, b)
}
func (m *GetUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserReq.Marshal(b, m, deterministic)
}
func (m *GetUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserReq.Merge(m, src)
}
func (m *GetUserReq) XXX_Size() int {
	return xxx_messageInfo_GetUserReq.Size(m)
}
func (m *GetUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserReq proto.InternalMessageInfo

func (m *GetUserReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetUserReq) GetTentId() *Demo {
	if m != nil {
		return m.TentId
	}
	return nil
}

type Demo struct {
	Tent                 string   `protobuf:"bytes,1,opt,name=tent,proto3" json:"tent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Demo) Reset()         { *m = Demo{} }
func (m *Demo) String() string { return proto.CompactTextString(m) }
func (*Demo) ProtoMessage()    {}
func (*Demo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c78cffa5d645ba4, []int{2}
}

func (m *Demo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Demo.Unmarshal(m, b)
}
func (m *Demo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Demo.Marshal(b, m, deterministic)
}
func (m *Demo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Demo.Merge(m, src)
}
func (m *Demo) XXX_Size() int {
	return xxx_messageInfo_Demo.Size(m)
}
func (m *Demo) XXX_DiscardUnknown() {
	xxx_messageInfo_Demo.DiscardUnknown(m)
}

var xxx_messageInfo_Demo proto.InternalMessageInfo

func (m *Demo) GetTent() string {
	if m != nil {
		return m.Tent
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "example.User")
	proto.RegisterMapType((map[string]string)(nil), "example.User.ExtraEntry")
	proto.RegisterType((*GetUserReq)(nil), "example.GetUserReq")
	proto.RegisterType((*Demo)(nil), "example.Demo")
}

func init() { proto.RegisterFile("example/example.proto", fileDescriptor_1c78cffa5d645ba4) }

var fileDescriptor_1c78cffa5d645ba4 = []byte{
	// 413 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xd5, 0xda, 0x4e, 0x4c, 0xa6, 0x54, 0x8a, 0xb6, 0x40, 0x57, 0xee, 0x01, 0xcb, 0x12, 0xc8,
	0xa7, 0x5d, 0x29, 0x1c, 0x88, 0x10, 0x17, 0x50, 0x23, 0xd4, 0x03, 0x17, 0x8b, 0x1e, 0xe0, 0x52,
	0xd9, 0xdd, 0x21, 0xb5, 0x6a, 0xc7, 0x66, 0xbd, 0x41, 0x89, 0xaa, 0x5e, 0x38, 0xf1, 0x0d, 0xfd,
	0x1d, 0xfe, 0x27, 0xdf, 0x80, 0xd6, 0x5e, 0x27, 0x0a, 0x28, 0x52, 0x4f, 0xb3, 0x6f, 0xde, 0xdb,
	0xd9, 0xf7, 0xc6, 0x86, 0xe7, 0xb8, 0x4a, 0xcb, 0xba, 0x40, 0x61, 0x2b, 0xaf, 0x55, 0xa5, 0x2b,
	0xea, 0x5b, 0x18, 0xbc, 0x9c, 0x57, 0xd5, 0xbc, 0x40, 0xd1, 0xb6, 0xb3, 0xe5, 0x77, 0xa1, 0xf3,
	0x12, 0x1b, 0x9d, 0x96, 0x75, 0xa7, 0x0c, 0xce, 0xfe, 0x15, 0x60, 0x59, 0xeb, 0xb5, 0x25, 0x4f,
	0x54, 0x3e, 0xbf, 0xd1, 0x8d, 0xe8, 0x4a, 0xd7, 0x8c, 0xfe, 0x10, 0xf0, 0x2e, 0x1b, 0x54, 0x94,
	0x81, 0x9f, 0x15, 0xd5, 0xf5, 0x2d, 0x4a, 0x46, 0x42, 0x37, 0x1e, 0x25, 0x3d, 0xa4, 0x1c, 0x06,
	0xb8, 0xd2, 0x2a, 0x65, 0x4e, 0xe8, 0xc6, 0x47, 0x13, 0xc6, 0x7b, 0x77, 0xe6, 0x1e, 0x9f, 0x19,
	0x6a, 0xb6, 0xd0, 0x6a, 0x9d, 0x74, 0x32, 0xfa, 0x16, 0x46, 0x37, 0xb9, 0xc2, 0x2b, 0x99, 0x6a,
	0x64, 0x6e, 0x48, 0xe2, 0xa3, 0x49, 0xc0, 0x3b, 0x63, 0xbc, 0x37, 0xc6, 0xbf, 0xf4, 0xce, 0x93,
	0x27, 0x46, 0x7c, 0x9e, 0x6a, 0x0c, 0xa6, 0x00, 0xbb, 0x69, 0x74, 0x0c, 0xee, 0x2d, 0xae, 0x19,
	0x09, 0x49, 0x3c, 0x4a, 0xcc, 0x91, 0x3e, 0x83, 0xc1, 0xcf, 0xb4, 0x58, 0x22, 0x73, 0xda, 0x5e,
	0x07, 0xde, 0x39, 0x53, 0x12, 0x7d, 0x06, 0xf8, 0x84, 0xda, 0xf8, 0x49, 0xf0, 0x07, 0x3d, 0x05,
	0x7f, 0xd9, 0xa0, 0xba, 0xca, 0xa5, 0xbd, 0x3d, 0x34, 0xf0, 0x42, 0xd2, 0xd7, 0xe0, 0x6b, 0x5c,
	0x68, 0x43, 0x38, 0xad, 0xaf, 0xe3, 0x6d, 0x96, 0x73, 0x2c, 0xab, 0x64, 0x68, 0xd8, 0x0b, 0x19,
	0x05, 0xe0, 0x19, 0x4c, 0x29, 0x78, 0xa6, 0x63, 0xa7, 0xb4, 0xe7, 0xc9, 0x2f, 0x07, 0x06, 0xe6,
	0xa1, 0x86, 0x2e, 0xc0, 0xff, 0x20, 0x65, 0xbb, 0xbc, 0xe3, 0xbd, 0x9d, 0x04, 0x2f, 0xfe, 0x8b,
	0x3b, 0x33, 0xdf, 0x21, 0x7a, 0xff, 0xb0, 0xf1, 0xa6, 0x70, 0x2a, 0x8c, 0x9d, 0x46, 0xdc, 0x59,
	0x93, 0xf7, 0xe2, 0x3a, 0x55, 0xb2, 0x11, 0x70, 0x76, 0x80, 0x30, 0x70, 0xec, 0xd0, 0xdf, 0x04,
	0x7c, 0x9b, 0x92, 0x9e, 0x6c, 0x1f, 0xdc, 0xe5, 0x0e, 0xf6, 0x5d, 0x44, 0x5f, 0x1f, 0x36, 0xde,
	0x25, 0xbc, 0x3a, 0x30, 0xf4, 0xce, 0x6e, 0x82, 0x9b, 0x7a, 0x0f, 0xf1, 0xa3, 0x64, 0x02, 0x57,
	0x63, 0xc2, 0xc8, 0xc7, 0xa7, 0xdf, 0xa0, 0xff, 0x55, 0xeb, 0x2c, 0x1b, 0xb6, 0x31, 0xdf, 0xfc,
	0x0d, 0x00, 0x00, 0xff, 0xff, 0x90, 0x24, 0x4c, 0x05, 0xbf, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UsersClient is the client API for Users service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UsersClient interface {
	AddUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*empty.Empty, error)
	GetUser(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*User, error)
}

type usersClient struct {
	cc *grpc.ClientConn
}

func NewUsersClient(cc *grpc.ClientConn) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) AddUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/example.Users/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GetUser(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/example.Users/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsersServer is the server API for Users service.
type UsersServer interface {
	AddUser(context.Context, *User) (*empty.Empty, error)
	GetUser(context.Context, *GetUserReq) (*User, error)
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Users/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).AddUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.Users/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetUser(ctx, req.(*GetUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddUser",
			Handler:    _Users_AddUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _Users_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example/example.proto",
}
