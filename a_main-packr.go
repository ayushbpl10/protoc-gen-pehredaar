// Code generated by github.com/gobuffalo/packr. DO NOT EDIT.

package main

import "github.com/gobuffalo/packr"

// You can use the "packr clean" command to clean up this,
// and any other packr generated files.
func init() {
	packr.PackJSONBytes("./templates", "file.tmpl", "\"e3stIGRlZmluZSAiRmlsZSIgLX19Ci8vIENvZGUgZ2VuZXJhdGVkIGJ5IHByb3RvYy1nZW4tZGVmYXVsdHMuIERPIE5PVCBFRElULgoKcGFja2FnZSByaWdodHN2YWwKCmltcG9ydCAiZm10IgppbXBvcnQgImNvbnRleHQiCmltcG9ydCAiZ29vZ2xlLmdvbGFuZy5vcmcvZ3JwYy9jb2RlcyIKaW1wb3J0ICJnb29nbGUuZ29sYW5nLm9yZy9ncnBjL3N0YXR1cyIKaW1wb3J0ICJnby51YmVyLm9yZy9meCIKaW1wb3J0ICJnby5hcHBvaW50eS5jb20vZ29vZ2xlL3BiL3JpZ2h0cyIKaW1wb3J0ICJnby5hcHBvaW50eS5jb20vZ29vZ2xlL3VzZXJpbmZvIgppbXBvcnQgImdpdGh1Yi5jb20vYXl1c2hicGwxMC9wcm90b2MtZ2VuLXJpZ2h0cy9leGFtcGxlL3JpZ2h0cyIKCgoKe3sgcmFuZ2UgLkltcG9ydHMgfX0KaW1wb3J0ICJ7eyAufX0iCnt7IGVuZCB9fQoKCnt7cmFuZ2UgJHNlcnZpY2VJbiA6PSAuU2VydmljZXN9fQogICAgY29uc3Qge3skc2VydmljZUluLlNlcnZpY2VOYW1lfX1SZXNvdXJjZVBhdGhzID0gWy4uLl1zdHJpbmd7CiAgICB7e3JhbmdlICRycGNJbiA6PSAkc2VydmljZUluLlJwY3N9fQogICAgICAgIHt7cmFuZ2UgJHJlc291cmNlIDo9ICRycGNJbi5SZXNvdXJjZXN9fQogICAgICAgICAgICAie3skcmVzb3VyY2UuUmVzb3VyY2VTdHJpbmdXaXRoQ3VybHlCcmFjZXN9fSIsCiAgICAgICAge3tlbmR9fQogICAge3tlbmR9fQogICAgfQp7e2VuZH19Cgp7eyByYW5nZSAkc2VydmljZSA6PSAuU2VydmljZXMgfX0KCgoKICAgIHR5cGUgUmlnaHRze3skc2VydmljZS5TZXJ2aWNlTmFtZX19U2VydmVyIHN0cnVjdCB7CiAgICAgICAge3sgLlBhY2thZ2VOYW1lIH19Lnt7JHNlcnZpY2UuU2VydmljZU5hbWV9fVNlcnZlcgogICAgICAgIHJpZ2h0c0NsaSByaWdodHMuUmlnaHRWYWxpZGF0b3JzQ2xpZW50CiAgICAgICAgdXNlciByaWdodC5Vc2VySURlcgogICAgfQoKICAgIGZ1bmMgaW5pdCgpIHsKICAgICAgICBvcHRpb25zID0gYXBwZW5kKG9wdGlvbnMsIGZ4LlByb3ZpZGUoTmV3UmlnaHRze3skc2VydmljZS5TZXJ2aWNlTmFtZX19Q2xpZW50KSkKICAgIH0KCiAgICB0eXBlIFJpZ2h0c3t7JHNlcnZpY2UuU2VydmljZU5hbWV9fUNsaWVudFJlc3VsdCBzdHJ1Y3QgewogICAgICAgIGZ4Lk91dAogICAgICAgIHt7JHNlcnZpY2UuU2VydmljZU5hbWV9fUNsaWVudCB7eyAuUGFja2FnZU5hbWUgfX0uQWNjZXB0YW5jZXNDbGllbnQgYG5hbWU6InIiYAogICAgfQoKICAgIGZ1bmMgTmV3UmlnaHRze3skc2VydmljZS5TZXJ2aWNlTmFtZX19Q2xpZW50KGMgcmlnaHRzLlJpZ2h0VmFsaWRhdG9yc0NsaWVudCwgcyB7eyAuUGFja2FnZU5hbWUgfX0ue3skc2VydmljZS5TZXJ2aWNlTmFtZX19U2VydmVyKSBSaWdodHN7eyRzZXJ2aWNlLlNlcnZpY2VOYW1lfX1DbGllbnRSZXN1bHQgewogICAgICAgIHJldHVybiBSaWdodHN7eyRzZXJ2aWNlLlNlcnZpY2VOYW1lfX1DbGllbnRSZXN1bHR7IHt7JHNlcnZpY2UuU2VydmljZU5hbWV9fUNsaWVudDoge3sgLlBhY2thZ2VOYW1lIH19Lk5ld0xvY2Fse3skc2VydmljZS5TZXJ2aWNlTmFtZX19Q2xpZW50KE5ld1JpZ2h0c3t7JHNlcnZpY2UuU2VydmljZU5hbWV9fVNlcnZlcihjLCBzKSl9CiAgICB9CiAgICBmdW5jIE5ld1JpZ2h0c3t7JHNlcnZpY2UuU2VydmljZU5hbWV9fVNlcnZlcihjIHJpZ2h0cy5SaWdodFZhbGlkYXRvcnNDbGllbnQsIHMge3sgLlBhY2thZ2VOYW1lIH19Lnt7JHNlcnZpY2UuU2VydmljZU5hbWV9fVNlcnZlciwgdSByaWdodC5Vc2VySURlcikge3sgLlBhY2thZ2VOYW1lIH19Lnt7JHNlcnZpY2UuU2VydmljZU5hbWV9fVNlcnZlciB7CiAgICAgICAgcmV0dXJuICZSaWdodHN7eyRzZXJ2aWNlLlNlcnZpY2VOYW1lfX1TZXJ2ZXJ7CiAgICAgICAgICAgIHMsCiAgICAgICAgICAgIGMsCiAgICAgICAgICAgIHUsCiAgICAgICAgfQogICAgfQoKICAgIHt7IHJhbmdlICRycGMgOj0gJHNlcnZpY2UuUnBjcyB9fQogICAgICAgIGZ1bmMgKHMgKlJpZ2h0c3t7JHNlcnZpY2UuU2VydmljZU5hbWV9fVNlcnZlcikge3skcnBjLlJwY05hbWV9fShjdHggY29udGV4dC5Db250ZXh0LCByaWdodHN2YXIgKnt7ICRycGMuUGFja2FnZU5hbWUgfX0ue3skcnBjLklucHV0fX0pICh7e2lmIGVxICRycGMuT3V0cHV0ICJFbXB0eSJ9fSplbXB0eS57eyRycGMuT3V0cHV0fX17e2Vsc2V9fSp7eyAkcnBjLlBhY2thZ2VOYW1lIH19Lnt7JHJwYy5PdXRwdXR9fXt7ZW5kfX0sIGVycm9yKSB7CgogICAgICAgICAgICB7eyBpZiBlcSAkcnBjLk1pc3NpbmcgZmFsc2V9fQoKICAgICAgICAgICAgUmVzb3VyY2VQYXRoT1IgOj0gbWFrZShbXXN0cmluZywwKQogICAgICAgICAgICBSZXNvdXJjZVBhdGhBTkQgOj0gbWFrZShbXXN0cmluZywwKQoKICAgICAgICAgICAge3tyYW5nZSAkcmVzb3VyY2UgOj0gJHJwYy5SZXNvdXJjZXN9fQoKICAgICAgICAgICAgICAgICB7e2lmICRyZXNvdXJjZS5Jc1JlcGVhdGVkfX0KCiAgICAgICAgICAgICAgICAgICAgICAgIHt7IHJhbmdlICRpLCRmb3Jsb29wIDo9ICRyZXNvdXJjZS5Gb3JMb29wfX0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgXywge3skZm9ybG9vcC5WYWx1ZUtleX19IDo9IHJhbmdlIHt7aWYgZXEgJGkgMH19cmlnaHRzdmFyLnt7ZW5kfX17eyRmb3Jsb29wLlJhbmdlS2V5fX0oKSB7CgogICAgICAgICAgICAgICAgICAgICAgICB7eyBlbmQgfX0KCiAgICAgICAgICAgICAgICAgICAgICAgIFJlc291cmNlUGF0aEFORCA9IGFwcGVuZChSZXNvdXJjZVBhdGhBTkQsCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbXQuU3ByaW50Zigie3skcmVzb3VyY2UuUmVzb3VyY2VTdHJpbmdXaXRoRm9ybWF0dGVyfX0iLAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgcmFuZ2UgJHJlc291cmNlLkdldFN0cmluZ3N9fQoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e3JhbmdlICRnZXRTdHJLZXksJG5vdGluY2x1ZGVyaWdodHN2YXIgOj0gIC59fQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e2lmIGVxICRub3RpbmNsdWRlcmlnaHRzdmFyIGZhbHNlfX1yaWdodHN2YXIue3tlbmR9fXt7JGdldFN0cktleX19LAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7ZW5kfX0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7ZW5kfX0gKSwKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAge3sgcmFuZ2UgJGZvcmxvb3AgOj0gJHJlc291cmNlLkZvckxvb3B9fQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAge3sgZW5kIH19CgoKICAgICAgICAgICAgICAgICAge3sgZW5kIH19CgogICAgICAgICAgICAge3sgZW5kIH19CgogICAgICAgICAgICBSZXNvdXJjZVBhdGhPUiA9IGFwcGVuZChSZXNvdXJjZVBhdGgsCgogICAgICAgICAgICB7e3JhbmdlICRyZXNvdXJjZSA6PSAkcnBjLlJlc291cmNlc319CgogICAgICAgICAgICAgICAge3tpZiBlcSAkcmVzb3VyY2UuSXNSZXBlYXRlZCBmYWxzZX19CgogICAgICAgICAgICAgICAgICAgIGZtdC5TcHJpbnRmKCJ7eyRyZXNvdXJjZS5SZXNvdXJjZVN0cmluZ1dpdGhGb3JtYXR0ZXJ9fSIsCiAgICAgICAgICAgICAgICAgICAgICAgIHt7IHJhbmdlICRyZXNvdXJjZS5HZXRTdHJpbmdzfX0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e3JhbmdlICRnZXRTdHJLZXksJG5vdGluY2x1ZGVyaWdodHN2YXIgOj0gIC59fQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7e2lmIGVxICRub3RpbmNsdWRlcmlnaHRzdmFyIGZhbHNlfX1yaWdodHN2YXIue3tlbmR9fXt7JGdldFN0cktleX19LAoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7ZW5kfX0KCiAgICAgICAgICAgICAgICAgICAgICAgIHt7ZW5kfX0gKSwKCiAgICAgICAgICAgICAgICB7e2VuZH19CgogICAgICAgICAgICB7e2VuZH19CgogICAgICAgICAgICApCgogICAgICAgICAgICByZXMsIGVyciA6PSBzLnJpZ2h0c0NsaS5Jc1ZhbGlkKGN0eCwgJnJpZ2h0cy5Jc1ZhbGlkUmVxewogICAgICAgICAgICAgICAgUmVzb3VyY2VQYXRoT1IgIDogIFJlc291cmNlUGF0aCwKICAgICAgICAgICAgICAgIFJlc291cmNlUGF0aEFORCA6ICBSZXNvdXJjZVBhdGhBTkQsCiAgICAgICAgICAgICAgICBVc2VySWQgICAgICAgICAgOiAgcy51c2VyLlVzZXJJRChjdHgpLAogICAgICAgICAgICAgICAgTW9kdWxlTmFtZSAgICAgIDogICJ7eyRzZXJ2aWNlLlNlcnZpY2VOYW1lfX0iLAogICAgICAgICAgICB9KQogICAgICAgICAgICBpZiBlcnIgIT0gbmlsIHsKICAgICAgICAgICAgICAgIHJldHVybiBuaWwsIGVycgogICAgICAgICAgICB9CgoKICAgICAgICAgICAgaWYgIXJlcy5Jc1ZhbGlkIHsKICAgICAgICAgICAgICAgIHJldHVybiBuaWwsIHN0YXR1cy5FcnJvcmYoY29kZXMuUGVybWlzc2lvbkRlbmllZCwgcmVzLlJlYXNvbikKICAgICAgICAgICAgfQoKICAgICAgICAgICAge3tlbmR9fQoKICAgICAgICAgICAgcmV0dXJuIHMue3skc2VydmljZS5TZXJ2aWNlTmFtZX19U2VydmVyLnt7LlJwY05hbWV9fShjdHgsIHJpZ2h0c3ZhcikKICAgICAgICB9CgogICAge3tlbmR9fQp7eyBlbmQgfX0KCnt7ZW5kfX0K\"")
}
